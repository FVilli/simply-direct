{"version":3,"file":"functions.js","sourceRoot":"","sources":["../src/functions.ts"],"names":[],"mappings":";;AAEA,sBAEC;AAED,oBAUC;AAED,gCAQC;AAED,sDAIC;AAED,0CAMC;AAED,sBAEC;AA1CD,SAAgB,KAAK,CAAC,EAAU;IAC9B,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;AACzD,CAAC;AAED,SAAgB,IAAI,CAAC,KAAW,IAAI,IAAI,EAAE;IACxC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;QACtC,QAAQ,EAAE,aAAa;QACvB,IAAI,EAAE,SAAS;QACf,KAAK,EAAE,SAAS;QAChB,GAAG,EAAE,SAAS;QACd,IAAI,EAAE,SAAS;QACf,MAAM,EAAE,SAAS;QACjB,MAAM,EAAE,SAAS;KAClB,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAChB,CAAC;AAED,SAAgB,UAAU,CAAC,KAAa,EAAE,aAAuB;IAC/D,IAAI,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC;QAAE,OAAO,IAAI,CAAC;IAC9C,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACpC,OAAO,aAAa,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;QAChC,MAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,QAAQ,CAAC,MAAM,KAAK,UAAU,CAAC,MAAM;YAAE,OAAO,KAAK,CAAC;QACxD,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrF,CAAC,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,qBAAqB,CAAC,aAA4B;IAChE,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAU,CAAC;IACnC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,OAAO,CAAE,CAAC,GAAY,EAAE,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,GAAU,EAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC;IAC5G,OAAO,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC9B,CAAC;AAED,SAAgB,eAAe,CAAC,IAAW;IACzC,MAAM,GAAG,GAAG,QAAQ,IAAI,EAAE,CAAC;IAC3B,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACxC,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IACpD,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAgB,KAAK,CAAI,GAAM;IAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;AACzC,CAAC","sourcesContent":["import { ISubscriptions } from \"./interfaces\";\n\nexport function delay(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function ITdt(dt: Date = new Date()): string {\n  return new Intl.DateTimeFormat('it-IT', {\n    timeZone: 'Europe/Rome', // ðŸ‡®ðŸ‡¹ Fuso orario italiano\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n  }).format(dt);\n}\n\nexport function isMatching(event: string, subscriptions: string[]): boolean {\n  if (subscriptions.includes('**')) return true;\n  const eventParts = event.split('.');\n  return subscriptions.some((sub) => {\n    const subParts = sub.split('.');\n    if (subParts.length !== eventParts.length) return false;\n    return subParts.every((part, index) => part === '*' || part === eventParts[index]);\n  });\n}\n\nexport function distinctSubscriptions(subscriptions:ISubscriptions): string[] {\n  const distinct = new Set<string>();\n  Object.values(subscriptions).forEach( (arr:string[]) => { arr.forEach((str:string) => distinct.add(str));});\n  return Array.from(distinct); \n}\n\nexport function crossTabCounter(name:string): number {\n  const key = `_CTC_${name}`;\n  const value = localStorage.getItem(key);\n  const counter = value ? parseInt(value) : 0;\n  localStorage.setItem(key, (counter + 1).toString());\n  return counter;\n}\n\nexport function clone<T>(obj: T): T {\n  return JSON.parse(JSON.stringify(obj));\n}\n"]}